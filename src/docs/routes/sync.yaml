paths:
  /sync:
    get:
      tags:
        - Sync
      summary: Sync table data
      description: Fetch all records from a specified table that have been updated after a given date (requires device authentication)
      security:
        - DeviceAuth: [] # assuming `DeviceAuth` is defined in components/securitySchemes
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Device ID for authentication
          example: 'device-123'
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for device authentication
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        - in: query
          name: tableName
          required: true
          schema:
            type: string
            enum:
              - tasks
              - parcels
              - parcelItems
              - products
              - shipments
              - users
              - guests
          description: Name of the table to sync
          example: users
        - in: query
          name: lastSync
          required: true
          schema:
            type: string
            format: date-time
          description: ISO 8601 date-time string. Only records updated after this date will be returned
          example: '2024-01-01T00:00:00.000Z'
      responses:
        '200':
          description: Sync data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Found 2 users records updated after 2024-01-01T00:00:00.000Z'
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/User'
                        - $ref: '#/components/schemas/Product'
                    description: Array of records updated after the specified date
              examples:
                users:
                  summary: Users sync response
                  value:
                    success: true
                    message: 'Found 2 users records updated after 2024-01-01T00:00:00.000Z'
                    data:
                      - id: '123e4567-e89b-12d3-a456-426614174000'
                        email: 'user@example.com'
                        firstName: 'John'
                        lastName: 'Doe'
                        role: 'User'
                        isActive: true
                        createdAt: '2024-01-15T10:30:00.000Z'
                        updatedAt: '2024-01-20T14:45:00.000Z'
                      - id: '123e4567-e89b-12d3-a456-426614174001'
                        email: 'jane@example.com'
                        firstName: 'Jane'
                        lastName: 'Smith'
                        role: 'Admin'
                        isActive: true
                        createdAt: '2024-01-16T09:15:00.000Z'
                        updatedAt: '2024-01-21T11:20:00.000Z'
                products:
                  summary: Products sync response
                  value:
                    success: true
                    message: 'Found 3 products records updated after 2024-01-01T00:00:00.000Z'
                    data:
                      - id: 'prod-123'
                        name: 'Sample Product'
                        description: 'A sample product description'
                        price: 29.99
                        isActive: true
                        createdAt: '2024-01-10T08:00:00.000Z'
                        updatedAt: '2024-01-18T16:30:00.000Z'
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidTableName:
                  summary: Invalid table name
                  value:
                    success: false
                    error: 'Validation error: tableName: tableName must be one of: tasks, parcels, parcelItems, products, shipments, users, guests'
                invalidDate:
                  summary: Invalid date format
                  value:
                    success: false
                    error: 'Validation error: lastSync: lastSync must be a valid ISO date string'
        '401':
          description: Unauthorized - Invalid device authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sync/products/status:
    get:
      tags:
        - Products Sync
      summary: Get product sync status
      description: Get current product sync status including last update date and configuration
      security:
        - DeviceAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Device ID for authentication
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for device authentication
      responses:
        '200':
          description: Product sync status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Product sync status retrieved successfully'
                  data:
                    type: object
                    properties:
                      lastSyncDate:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2024-01-20T10:30:00.000Z'
                      syncConfigured:
                        type: boolean
                        example: true
                      nextSyncInfo:
                        type: string
                        example: 'Automatic sync runs every week based on PRODUCT_SYNC_INTERVAL environment variable'

  /sync/products/config:
    get:
      tags:
        - Products Sync
      summary: Get product sync configuration
      description: Get current product sync configuration settings
      security:
        - DeviceAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Device ID for authentication
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for device authentication
      responses:
        '200':
          description: Product sync configuration retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Product sync configuration retrieved successfully'
                  data:
                    type: object
                    properties:
                      apiUrl:
                        type: string
                        example: 'https://testing.unidata.msf.org/msf-mdm-unidata/rest/ud-api/v1/articles'
                      syncInterval:
                        type: string
                        example: '168' # 1 week in hours
                      hasCredentials:
                        type: boolean
                        example: true
                      productType:
                        type: string
                        example: 'MED'
                      defaultPageSize:
                        type: number
                        example: 1000
                      mode:
                        type: number
                        example: 7

  /sync/products/manual:
    post:
      tags:
        - Products Sync
      summary: Trigger manual product sync
      description: Manually trigger a product sync operation with optional validation
      security:
        - DeviceAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Device ID for authentication
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for device authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resetLastUpdate:
                  type: boolean
                  description: Whether to reset last update date before sync (forces full sync)
                  example: false
                  default: false
            examples:
              defaultSync:
                summary: Regular incremental sync
                value: {}
              resetSync:
                summary: Full sync (reset last update)
                value:
                  resetLastUpdate: true
      responses:
        '200':
          description: Manual product sync completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Manual product sync completed successfully'
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      fetchedProducts:
                        type: number
                        example: 150
                      insertedProducts:
                        type: number
                        example: 150
                      lastSyncDate:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2024-01-20T10:30:00.000Z'
                      currentSyncDate:
                        type: string
                        format: date-time
                        example: '2024-01-21T10:30:00.000Z'
                      resetLastUpdate:
                        type: boolean
                        example: false
        '400':
          description: Bad request - Invalid parameters or API credentials not configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                credentialsNotConfigured:
                  summary: API credentials not configured
                  value:
                    success: false
                    error: 'API credentials not configured'
                invalidRequestBody:
                  summary: Invalid request body
                  value:
                    success: false
                    error: 'Validation error: resetLastUpdate: Expected boolean, received string'

  /sync/products/reset:
    post:
      tags:
        - Products Sync
      summary: Reset last update date
      description: Reset the last update date for product sync with validation
      security:
        - DeviceAuth: []
      parameters:
        - in: header
          name: x-device-id
          required: true
          schema:
            type: string
          description: Device ID for authentication
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
          description: API key for device authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                daysAgo:
                  type: integer
                  description: Number of days ago to set as last update date
                  minimum: 1
                  maximum: 365
                  example: 7
                  default: 7
            examples:
              defaultReset:
                summary: Reset to 7 days ago (default)
                value: {}
              customReset:
                summary: Reset to 30 days ago
                value:
                  daysAgo: 30
      responses:
        '200':
          description: Last update date reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Last update date reset to 7 days ago'
                  data:
                    type: object
                    properties:
                      resetDate:
                        type: string
                        format: date-time
                        example: '2024-01-14T10:30:00.000Z'
                      daysAgo:
                        type: number
                        example: 7
        '400':
          description: Bad request - Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidDaysAgo:
                  summary: Invalid daysAgo value
                  value:
                    success: false
                    error: 'Validation error: daysAgo: daysAgo must be at least 1'
                exceededMaxDays:
                  summary: daysAgo exceeds maximum
                  value:
                    success: false
                    error: 'Validation error: daysAgo: daysAgo cannot exceed 365 days'
